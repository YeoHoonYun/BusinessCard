간단 명함 관리.

이름, 전화번호, 회사명 을 관리하는 프로그램을 만들자.

명함 입력
명함 조회 - 이름, 회사명으로 찾는 기능 (여러건 등장할 수 있다.)
명함 수정
명함 삭제 - 내부적으로 id값을 가지도록 한다.
프로그램을 재시작해도 명함을 조회할 수 있어야 한다.
파일에 json 이라는 형식으로 저장을 한다.
이미 저장 데이터가 있으면 읽어와야 하고, 없으면 새로 생성한다.
json 이 뭐야?
json 데이터를 조작할 수 있어야 한다. 저장하고, 읽고, 수정등을 할 수 있어야한다.
json 라이브러리는 없을까?
위의 요구사항을 처리하려면 json은 어떤 형태로 저장되어야 할까?
클래스를 어떻게 만들까? 클래스 이름, 메소드 명에 대한 고민 (설계)
--------------------------------------------------------------------------
1. maven 프로젝트를 생성. java 8 사용할 수 있도록 한다.
2. json ? json 라이브러리? json 라이브러리를 사용하려면 pom.xml에
어떤 내용을 추가할까?
3. 라이브러리를 선택했다면, 해당 라이브러리를 이용해서 json에 어떤 데이터를
추가, 수정, 삭제, 조회, 저장, 읽어오기 등을 할 수 있는지 확인한다.
(Test 코드를 작성한다. 테스트 코드는 어떻게 작성하는 것이 좋을까?
에 대한 고민도 필요하다.)
4. 우리가 만들 클래스를 스케치한다.

--------------------------------------------------------------------------
XML의 형식은 데이터가 많이 소비 된다.

=> 해결 : JSON

// XUnit(테스트 코드)
테스트 코드를 쉽게 작성하느 방법 : JUnit
JUnit을 사용하려면 pom.ml 파일에 어떤 내용이 들어갈까?
JUnit을 이용하여 간단한 test코드를 작성하는 예제를 만들어보자.
@Before, @Test 애노테이션의 역할에 대해 알아본다.

@Test : 해당 Method는 Test 대상 메소드임을 의미
@BeforeClass : 해당 테스트가 시작전에 딱 한 번씩 수행되도록 지정한다.
@AtferClass : 해당 테스트가 끝나고 딱 한 번씩만 수행되도록 지정한다.
@Before : 해당 테스트가 진행이 시작되기 전에 작업할 내용을 호출한다.
@After : 해당 테스트가 진행이 끝난 후에 작업할 내용을 호출한다.
@Ignore : TestCase를 무시할 수 있다.

--------------------------------------------------------------------------
File 클래스의 사용방법을 알아야됨.